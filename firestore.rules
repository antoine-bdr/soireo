rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function hasRequiredFields(fields) {
      return request.resource.data.keys().hasAll(fields);
    }
    
    function isInRange(value, min, max) {
      return value is number && value >= min && value <= max;
    }
    
    match /users/{userId} {
      allow read, write: if isAuthenticated();
    }
    
    match /events/{eventId} {
      allow read: if isAuthenticated();
      
      allow create: if isAuthenticated()
        && hasRequiredFields([
          'title', 'description', 'date', 'location',
          'organizerId', 'organizerName', 'organizerPhoto',
          'maxParticipants', 'currentParticipants', 'participants',
          'category', 'imageUrl', 'images', 'tags',
          'isPrivate', 'requiresApproval',
          'createdAt', 'updatedAt'
        ])
        && request.resource.data.organizerId == request.auth.uid
        && request.resource.data.title is string
        && request.resource.data.title.size() >= 3 
        && request.resource.data.description is string
        && request.resource.data.description.size() >= 10
        && request.resource.data.date is timestamp
        && request.resource.data.location is map
        && request.resource.data.location.keys().hasAll(['address', 'city', 'zipCode', 'latitude', 'longitude', 'placeId', 'country'])
        && request.resource.data.location.latitude is number
        && request.resource.data.location.longitude is number
        && isInRange(request.resource.data.maxParticipants, 2, 1000)
        && request.resource.data.currentParticipants == 1
        && request.resource.data.participants is list
        && request.resource.data.participants.size() == 1
        && request.resource.data.participants[0] == request.auth.uid
        && request.resource.data.organizerName is string
        && request.resource.data.organizerPhoto is string
        && request.resource.data.category is string
        && request.resource.data.imageUrl is string
        && request.resource.data.images is list
        && request.resource.data.tags is list
        && request.resource.data.isPrivate is bool
        && request.resource.data.requiresApproval is bool
        && request.resource.data.createdAt is timestamp
        && request.resource.data.updatedAt is timestamp;
      
      allow update, delete: if isAuthenticated() 
        && resource.data.organizerId == request.auth.uid;
    }
    
    match /participants/{participantId} {
      allow read, write: if isAuthenticated();
    }
    
    match /accessRequests/{requestId} {
      allow read, write: if isAuthenticated();
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}