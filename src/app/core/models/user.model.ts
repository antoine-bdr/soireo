// src/app/core/models/user.model.ts
// Mod√®le de donn√©es pour les profils utilisateurs
// üéØ Sprint 4 - Profil Utilisateur

import { Timestamp } from '@angular/fire/firestore';

/**
 * Interface principale repr√©sentant un utilisateur
 * Stock√©e dans la collection Firestore "users"
 * 
 * Structure :
 * - UID Firebase = ID du document
 * - Donn√©es d'authentification synchronis√©es avec Firebase Auth
 * - Donn√©es de profil personnalis√©es
 */
export interface User {
  // ========================================
  // IDENTIFICATION (Firebase Auth sync)
  // ========================================
  id: string;                    // UID Firebase (identique √† auth.currentUser.uid)
  email: string;                 // Email de connexion
  displayName: string;           // Nom complet de l'utilisateur
  
  // ========================================
  // INFORMATIONS PERSONNELLES
  // ========================================
  firstName: string;             // Pr√©nom
  lastName: string;              // Nom de famille
  bio?: string;                  // Biographie / Description personnelle
  phoneNumber?: string;          // Num√©ro de t√©l√©phone (optionnel)
  dateOfBirth?: Timestamp;       // Date de naissance (optionnel)
  
  // ========================================
  // PROFIL VISUEL
  // ========================================
  photoURL?: string;             // URL de la photo de profil (Firebase Storage)
  coverPhotoURL?: string;        // URL photo de couverture (optionnel)
  
  // ========================================
  // PR√âF√âRENCES
  // ========================================
  interests?: string[];          // Centres d'int√©r√™t (tags)
  favoriteCategories?: string[]; // Cat√©gories d'√©v√©nements pr√©f√©r√©es
  city?: string;                 // Ville de r√©sidence
  country?: string;              // Pays
  
  // ========================================
  // STATISTIQUES (calcul√©es)
  // ========================================
  eventsCreatedCount: number;    // Nombre d'√©v√©nements cr√©√©s
  eventsJoinedCount: number;     // Nombre d'√©v√©nements rejoints
  
  // ========================================
  // M√âTADONN√âES
  // ========================================
  createdAt: Timestamp;          // Date de cr√©ation du compte
  updatedAt: Timestamp;          // Derni√®re modification du profil
  lastLoginAt?: Timestamp;       // Derni√®re connexion
  
  // ========================================
  // PARAM√àTRES COMPTE
  // ========================================
  isActive: boolean;             // Compte actif ou d√©sactiv√©
  isEmailVerified: boolean;      // Email v√©rifi√©
  notificationsEnabled: boolean; // Notifications push activ√©es
}

/**
 * DTO (Data Transfer Object) pour cr√©er un profil utilisateur
 * Utilis√© lors de l'inscription (authentication.service.ts)
 * 
 * Champs requis uniquement :
 * - Donn√©es Firebase Auth (id, email, displayName)
 * - Nom/Pr√©nom extraits du displayName
 */
export interface CreateUserDto {
  id: string;                    // UID Firebase
  email: string;                 // Email
  displayName: string;           // Nom complet
  firstName: string;             // Pr√©nom
  lastName: string;              // Nom
  photoURL?: string;             // Photo (optionnel)
  isEmailVerified?: boolean;     // Email v√©rifi√© (depuis Firebase Auth)
}

/**
 * DTO pour mettre √† jour un profil utilisateur
 * Tous les champs sont optionnels (mise √† jour partielle)
 * 
 * Utilis√© dans profile.page.ts pour l'√©dition du profil
 */
export interface UpdateUserDto {
  displayName?: string;
  firstName?: string;
  lastName?: string;
  bio?: string;
  phoneNumber?: string;
  dateOfBirth?: Date;
  photoURL?: string;
  coverPhotoURL?: string;
  interests?: string[];
  favoriteCategories?: string[];
  city?: string;
  country?: string;
  notificationsEnabled?: boolean;
}

/**
 * Interface pour les statistiques publiques d'un utilisateur
 * Utilis√©e pour afficher le profil public d'autres utilisateurs
 */
export interface UserPublicProfile {
  id: string;
  displayName: string;
  photoURL?: string;
  bio?: string;
  city?: string;
  eventsCreatedCount: number;
  eventsJoinedCount: number;
  memberSince: Timestamp;        // createdAt
}

/**
 * Interface pour les param√®tres de notification
 * Peut √™tre √©tendue plus tard pour des notifications granulaires
 */
export interface UserNotificationSettings {
  enabled: boolean;
  eventReminders: boolean;
  newParticipants: boolean;
  eventUpdates: boolean;
  messages: boolean;
}